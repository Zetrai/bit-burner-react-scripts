export async function main(ns) {
    const target = `${ns.args[0]}`;
    const server = ns.getServer(target);
    const ramAvailable = server.maxRam - server.ramUsed;
    const ramPerThread = ns.getScriptRam('/scripts/hack.js');
    const maxThreads = Math.floor(ramAvailable / ramPerThread);
    ns.tprint('------------------------------------');
    ns.tprint('Server Infomation');
    ns.tprint('------------------------------------');
    ns.tprint('Host Name: ' + server.hostname);
    ns.tprint('IP: ' + server.ip);
    ns.tprint('Owned By: ' + server.organizationName);
    ns.tprint('');
    ns.tprint('------------------------------------');
    ns.tprint('Security Infomation');
    ns.tprint('------------------------------------');
    ns.tprint('Required Hacking Level: ' + server.requiredHackingSkill);
    ns.tprint('Min Security level: ' + server.minDifficulty);
    ns.tprint('Current security: ' + ns.nFormat(server.hackDifficulty || 0, '0.00'));
    ns.tprint('');
    ns.tprint('------------------------------------');
    ns.tprint('Money Infomation');
    ns.tprint('------------------------------------');
    ns.tprint('Max Money: ' + ns.nFormat(server.moneyMax || 0, '$0.000a'));
    ns.tprint('Current Money: ' + ns.nFormat(server.moneyAvailable || 0, '$0.000a'));
    ns.tprint('Server Growth: ' + server.serverGrowth);
    ns.tprint('');
    ns.tprint('------------------------------------');
    ns.tprint('Hardware Infomation');
    ns.tprint('------------------------------------');
    ns.tprint('Cores: ' + server.cpuCores);
    ns.tprint('Max RAM: ' + server.maxRam);
    ns.tprint('Used RAM: ' + server.ramUsed);
    ns.tprint('Max Threads: ' + maxThreads);
    ns.tprint('');
    ns.tprint('------------------------------------');
    ns.tprint('Hacking Infomation');
    ns.tprint('------------------------------------');
    ns.tprint('Rooted: ' + server.hasAdminRights);
    ns.tprint('Backdoored: ' + server.backdoorInstalled);
    ns.tprint('Required Open Ports: ' + server.numOpenPortsRequired);
    ns.tprint('Ports Currently Open: ' + server.openPortCount);
    ns.tprint('------------------------------------');
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VydmVySW5mby5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zY3JpcHRzL3NlcnZlckluZm8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0EsTUFBTSxDQUFDLEtBQUssVUFBVSxJQUFJLENBQUMsRUFBTTtJQUMvQixNQUFNLE1BQU0sR0FBRyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztJQUMvQixNQUFNLE1BQU0sR0FBVyxFQUFFLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRTVDLE1BQU0sWUFBWSxHQUFHLE1BQU0sQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQztJQUNwRCxNQUFNLFlBQVksR0FBRyxFQUFFLENBQUMsWUFBWSxDQUFDLGtCQUFrQixDQUFDLENBQUM7SUFDekQsTUFBTSxVQUFVLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFDLENBQUM7SUFFM0QsRUFBRSxDQUFDLE1BQU0sQ0FBQyxzQ0FBc0MsQ0FBQyxDQUFDO0lBQ2xELEVBQUUsQ0FBQyxNQUFNLENBQUMsbUJBQW1CLENBQUMsQ0FBQztJQUMvQixFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7SUFDbEQsRUFBRSxDQUFDLE1BQU0sQ0FBQyxhQUFhLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzNDLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUM5QixFQUFFLENBQUMsTUFBTSxDQUFDLFlBQVksR0FBRyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUNsRCxFQUFFLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ2QsRUFBRSxDQUFDLE1BQU0sQ0FBQyxzQ0FBc0MsQ0FBQyxDQUFDO0lBQ2xELEVBQUUsQ0FBQyxNQUFNLENBQUMscUJBQXFCLENBQUMsQ0FBQztJQUNqQyxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7SUFDbEQsRUFBRSxDQUFDLE1BQU0sQ0FBQywwQkFBMEIsR0FBRyxNQUFNLENBQUMsb0JBQW9CLENBQUMsQ0FBQztJQUNwRSxFQUFFLENBQUMsTUFBTSxDQUFDLHNCQUFzQixHQUFHLE1BQU0sQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUN6RCxFQUFFLENBQUMsTUFBTSxDQUNQLG9CQUFvQixHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLGNBQWMsSUFBSSxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQ3RFLENBQUM7SUFDRixFQUFFLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ2QsRUFBRSxDQUFDLE1BQU0sQ0FBQyxzQ0FBc0MsQ0FBQyxDQUFDO0lBQ2xELEVBQUUsQ0FBQyxNQUFNLENBQUMsa0JBQWtCLENBQUMsQ0FBQztJQUM5QixFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7SUFDbEQsRUFBRSxDQUFDLE1BQU0sQ0FBQyxhQUFhLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsUUFBUSxJQUFJLENBQUMsRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDO0lBQ3ZFLEVBQUUsQ0FBQyxNQUFNLENBQ1AsaUJBQWlCLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsY0FBYyxJQUFJLENBQUMsRUFBRSxTQUFTLENBQUMsQ0FDdEUsQ0FBQztJQUNGLEVBQUUsQ0FBQyxNQUFNLENBQUMsaUJBQWlCLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ25ELEVBQUUsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDZCxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7SUFDbEQsRUFBRSxDQUFDLE1BQU0sQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO0lBQ2pDLEVBQUUsQ0FBQyxNQUFNLENBQUMsc0NBQXNDLENBQUMsQ0FBQztJQUNsRCxFQUFFLENBQUMsTUFBTSxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDdkMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxXQUFXLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3ZDLEVBQUUsQ0FBQyxNQUFNLENBQUMsWUFBWSxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUN6QyxFQUFFLENBQUMsTUFBTSxDQUFDLGVBQWUsR0FBRyxVQUFVLENBQUMsQ0FBQztJQUN4QyxFQUFFLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ2QsRUFBRSxDQUFDLE1BQU0sQ0FBQyxzQ0FBc0MsQ0FBQyxDQUFDO0lBQ2xELEVBQUUsQ0FBQyxNQUFNLENBQUMsb0JBQW9CLENBQUMsQ0FBQztJQUNoQyxFQUFFLENBQUMsTUFBTSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7SUFDbEQsRUFBRSxDQUFDLE1BQU0sQ0FBQyxVQUFVLEdBQUcsTUFBTSxDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBQzlDLEVBQUUsQ0FBQyxNQUFNLENBQUMsY0FBYyxHQUFHLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0lBQ3JELEVBQUUsQ0FBQyxNQUFNLENBQUMsdUJBQXVCLEdBQUcsTUFBTSxDQUFDLG9CQUFvQixDQUFDLENBQUM7SUFDakUsRUFBRSxDQUFDLE1BQU0sQ0FBQyx3QkFBd0IsR0FBRyxNQUFNLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDM0QsRUFBRSxDQUFDLE1BQU0sQ0FBQyxzQ0FBc0MsQ0FBQyxDQUFDO0FBQ3BELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBuby1jb25zdGFudC1jb25kaXRpb24gKi9cclxuaW1wb3J0IHsgTlMsIFNlcnZlciB9IGZyb20gJ0Bucyc7XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihuczogTlMpOiBQcm9taXNlPHZvaWQ+IHtcclxuICBjb25zdCB0YXJnZXQgPSBgJHtucy5hcmdzWzBdfWA7XHJcbiAgY29uc3Qgc2VydmVyOiBTZXJ2ZXIgPSBucy5nZXRTZXJ2ZXIodGFyZ2V0KTtcclxuXHJcbiAgY29uc3QgcmFtQXZhaWxhYmxlID0gc2VydmVyLm1heFJhbSAtIHNlcnZlci5yYW1Vc2VkO1xyXG4gIGNvbnN0IHJhbVBlclRocmVhZCA9IG5zLmdldFNjcmlwdFJhbSgnL3NjcmlwdHMvaGFjay5qcycpO1xyXG4gIGNvbnN0IG1heFRocmVhZHMgPSBNYXRoLmZsb29yKHJhbUF2YWlsYWJsZSAvIHJhbVBlclRocmVhZCk7XHJcblxyXG4gIG5zLnRwcmludCgnLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tJyk7XHJcbiAgbnMudHByaW50KCdTZXJ2ZXIgSW5mb21hdGlvbicpO1xyXG4gIG5zLnRwcmludCgnLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tJyk7XHJcbiAgbnMudHByaW50KCdIb3N0IE5hbWU6ICcgKyBzZXJ2ZXIuaG9zdG5hbWUpO1xyXG4gIG5zLnRwcmludCgnSVA6ICcgKyBzZXJ2ZXIuaXApO1xyXG4gIG5zLnRwcmludCgnT3duZWQgQnk6ICcgKyBzZXJ2ZXIub3JnYW5pemF0aW9uTmFtZSk7XHJcbiAgbnMudHByaW50KCcnKTtcclxuICBucy50cHJpbnQoJy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLScpO1xyXG4gIG5zLnRwcmludCgnU2VjdXJpdHkgSW5mb21hdGlvbicpO1xyXG4gIG5zLnRwcmludCgnLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tJyk7XHJcbiAgbnMudHByaW50KCdSZXF1aXJlZCBIYWNraW5nIExldmVsOiAnICsgc2VydmVyLnJlcXVpcmVkSGFja2luZ1NraWxsKTtcclxuICBucy50cHJpbnQoJ01pbiBTZWN1cml0eSBsZXZlbDogJyArIHNlcnZlci5taW5EaWZmaWN1bHR5KTtcclxuICBucy50cHJpbnQoXHJcbiAgICAnQ3VycmVudCBzZWN1cml0eTogJyArIG5zLm5Gb3JtYXQoc2VydmVyLmhhY2tEaWZmaWN1bHR5IHx8IDAsICcwLjAwJylcclxuICApO1xyXG4gIG5zLnRwcmludCgnJyk7XHJcbiAgbnMudHByaW50KCctLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0nKTtcclxuICBucy50cHJpbnQoJ01vbmV5IEluZm9tYXRpb24nKTtcclxuICBucy50cHJpbnQoJy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLScpO1xyXG4gIG5zLnRwcmludCgnTWF4IE1vbmV5OiAnICsgbnMubkZvcm1hdChzZXJ2ZXIubW9uZXlNYXggfHwgMCwgJyQwLjAwMGEnKSk7XHJcbiAgbnMudHByaW50KFxyXG4gICAgJ0N1cnJlbnQgTW9uZXk6ICcgKyBucy5uRm9ybWF0KHNlcnZlci5tb25leUF2YWlsYWJsZSB8fCAwLCAnJDAuMDAwYScpXHJcbiAgKTtcclxuICBucy50cHJpbnQoJ1NlcnZlciBHcm93dGg6ICcgKyBzZXJ2ZXIuc2VydmVyR3Jvd3RoKTtcclxuICBucy50cHJpbnQoJycpO1xyXG4gIG5zLnRwcmludCgnLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tJyk7XHJcbiAgbnMudHByaW50KCdIYXJkd2FyZSBJbmZvbWF0aW9uJyk7XHJcbiAgbnMudHByaW50KCctLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0nKTtcclxuICBucy50cHJpbnQoJ0NvcmVzOiAnICsgc2VydmVyLmNwdUNvcmVzKTtcclxuICBucy50cHJpbnQoJ01heCBSQU06ICcgKyBzZXJ2ZXIubWF4UmFtKTtcclxuICBucy50cHJpbnQoJ1VzZWQgUkFNOiAnICsgc2VydmVyLnJhbVVzZWQpO1xyXG4gIG5zLnRwcmludCgnTWF4IFRocmVhZHM6ICcgKyBtYXhUaHJlYWRzKTtcclxuICBucy50cHJpbnQoJycpO1xyXG4gIG5zLnRwcmludCgnLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tJyk7XHJcbiAgbnMudHByaW50KCdIYWNraW5nIEluZm9tYXRpb24nKTtcclxuICBucy50cHJpbnQoJy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLScpO1xyXG4gIG5zLnRwcmludCgnUm9vdGVkOiAnICsgc2VydmVyLmhhc0FkbWluUmlnaHRzKTtcclxuICBucy50cHJpbnQoJ0JhY2tkb29yZWQ6ICcgKyBzZXJ2ZXIuYmFja2Rvb3JJbnN0YWxsZWQpO1xyXG4gIG5zLnRwcmludCgnUmVxdWlyZWQgT3BlbiBQb3J0czogJyArIHNlcnZlci5udW1PcGVuUG9ydHNSZXF1aXJlZCk7XHJcbiAgbnMudHByaW50KCdQb3J0cyBDdXJyZW50bHkgT3BlbjogJyArIHNlcnZlci5vcGVuUG9ydENvdW50KTtcclxuICBucy50cHJpbnQoJy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLScpO1xyXG59XHJcbiJdfQ==